{"version":3,"file":"js/settings-panel.dcd608d6.js","mappings":"mFACQA,MAAM,U,WAAS,mB,kEAArB,QAGO,OAHP,EAGO,C,GADL,QAAc,I,cCFlB,MAAMC,EAAS,CAAC,EAGVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,Q,SCJM,EAAa,CAAEH,MAAO,QAErB,SAAS,EAAOI,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,OAAQ,WAAc,QAAoB,MAAO,EACnD,CCHA,OAAe,QAAgB,CAC7BC,KAAM,aCCR,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,ICLYC,EAUAC,EDLZ,IEJMC,EAAgC,CACpC,CACEC,KAAM,IACNJ,KAAM,OACNK,UAAW,IAITC,GAAS,QAAa,CAC1BC,SAAS,UACTJ,OAAM,IAGR,I,SCdA,GAAe,QAAY,CACzBK,MAAO,CAAC,EAERC,QAAS,CAAC,EAEVC,UAAW,CAAC,EAEZC,QAAS,CAAC,EAEVC,QAAS,CAAC,I,UFTZ,SAAYX,GACV,8BACA,sBAEA,gDACA,mDACD,EAND,CAAYA,IAAAA,EAAY,KAUxB,SAAYC,GACV,8BAEA,oCAEA,gDACA,mDACD,CAPD,CAAYA,IAAAA,EAAe,KGR3B,8BA6EA,QA5EE,sBAAW,aAAQ,C,IAKnB,WAEE,OAAOW,OAAOC,kBAAmG,MACnH,E,IARA,SAAoBC,GAElBF,OAAOC,kBAAoBC,CAC7B,E,+GAiBA,W,IAAkB,sDAEqB,mBAA1BC,EAAKA,EAAKC,OAAS,IAAoBD,EAAKA,EAAKC,OAAS,GACnEC,QAAQC,IAAG,MAAXD,QAAeF,GAIM,kBAAZA,EAAK,IAAmBA,EAAKC,OAAS,GAC/CC,QAAQE,MAAMJ,EAAK,IACnBE,QAAQC,IAAG,MAAXD,QAAeF,EAAKK,MAAM,IAC1BH,QAAQI,YAERJ,QAAQC,IAAG,MAAXD,QAAeF,EAEnB,I,mFAEA,W,IAAsB,sDACpBE,QAAQK,KAAI,MAAZL,QAAgBF,EAClB,I,iFAEA,W,IAAoB,sDAClBE,QAAQM,MAAK,MAAbN,QAAiBF,EACnB,I,0FAEA,SAAyBS,GACvBP,QAAQQ,eAAe,gBAAiBD,EAAME,YAAYA,aAC1DT,QAAQC,IAAI,UAAWM,EAAME,YAAYC,QACzCV,QAAQC,IAAI,QAASM,EAAME,YAAY3B,MACvCkB,QAAQC,IAAI,QAASM,EAAME,YAAYE,MACvCX,QAAQC,IAAI,MAAOM,EAAME,YAAYG,IACjCL,aAAiBM,EACnBb,QAAQC,IAAI,QAASlB,EAAawB,EAAMO,OAExCd,QAAQC,IAAI,QAASjB,EAAgBuB,EAAMO,OAE7Cd,QAAQI,WAERJ,QAAQC,IAAIM,EAAMT,MAClBE,QAAQI,UACV,I,iFAEA,SAAaG,GACa,UAApBQ,EAAOlB,UAA4C,SAApBkB,EAAOlB,WACxCG,QAAQQ,eAAe,cAAOzB,EAAawB,EAAMO,MAAK,aAAKP,EAAME,YAAYC,OAAM,YAAIH,EAAME,YAAY3B,OAEzGiC,EAAOC,eAAyBT,GAEpC,I,oFAEA,SAAgBA,GACU,UAApBQ,EAAOlB,UAA4C,SAApBkB,EAAOlB,WACxCG,QAAQQ,eAAe,eAAQxB,EAAgBuB,EAAMO,MAAK,aAAKP,EAAME,YAAYC,OAAM,YAAIH,EAAME,YAAY3B,OAE7GiC,EAAOC,eAA4BT,GAEvC,IACF,EA7EA,GCAA,aAME,WAAYE,EAA0BK,EAAoBhB,GAL1D,0C,yDACA,mC,yDACA,mC,yDAIEmB,KAAKR,YAAcA,EACnBQ,KAAKH,KAAOA,EACZG,KAAKnB,KAAOA,EAEZiB,EAAOR,MAAMU,KACf,CACF,SAbA,GCJA,aAIE,WAAmBC,EAAoBC,GAHvC,yC,yDACA,4C,yDAGEF,KAAKC,WAAaA,EAClBD,KAAKE,cAAgBA,CACvB,CACF,SARA,GCAaC,EAAwB,sCACxBC,EAAoB,2CCCjC,aAOE,a,IAAY,sDACV,GAPF,0C,yDACA,mC,yDACA,iC,yDACA,qC,yDACA,mC,yDAGsB,IAAhBC,EAAKvB,QAAgBuB,EAAK,GAAGC,MAAMH,GACrCH,KAAKR,YAAca,EAAK,GACxBL,KAAKN,KAAOM,KAAKR,YAAYe,MAAM,KAAK,GACxCP,KAAKL,GAAKK,KAAKR,YAAYe,MAAM,KAAK,GACtCP,KAAKP,OAASO,KAAKR,YAAYe,MAAM,KAAK,GAC1CP,KAAKnC,KAAOmC,KAAKR,YAAYe,MAAM,KAAK,QACnC,GAAoB,IAAhBF,EAAKvB,OACdkB,KAAKN,KAAOW,EAAK,GACjBL,KAAKL,GAAKU,EAAK,GACfL,KAAKP,OAASY,EAAK,GACnBL,KAAKnC,KAAOwC,EAAK,GACjBL,KAAKR,YAAc,UAAGQ,KAAKN,KAAI,YAAIM,KAAKL,GAAE,YAAIK,KAAKP,OAAM,YAAIO,KAAKnC,UAC7D,IAAoB,IAAhBwC,EAAKvB,OAOd,MAAM,IAAI0B,MAAM,wDAA0DC,KAAKC,UAAUL,IANzFL,KAAKN,KAAO,MACZM,KAAKL,GAAK,SACVK,KAAKP,OAASY,EAAK,GACnBL,KAAKnC,KAAOwC,EAAK,GACjBL,KAAKR,YAAc,UAAGQ,KAAKN,KAAI,YAAIM,KAAKL,GAAE,YAAIK,KAAKP,OAAM,YAAIO,KAAKnC,K,CAItE,CACF,SA9BA,GCOAa,OAAOiC,aAAe,IAAIC,IAQ1B,+B,8CAsCA,QAtC2B,a,6FAMzB,SAAQC,EAAmBhC,GACzB,IAAMiC,EAAK,IAAIC,EAAY,MAAO,SAAUf,KAAKC,WAAYY,GAC7D,IAAIjB,EAASkB,EAAIhD,EAAakD,KAAMnC,GAEpCoC,GAAGC,QAAO,MAAVD,IAAE,SAASzB,aAAgBX,GAAI,GACjC,I,wFAOA,SAAGgC,EAAmBM,GACpB,IAAML,EAAK,IAAIC,EAAY,SAAU,MAAOf,KAAKC,WAAYY,GAC7D,IAAIjB,EAASkB,EAAIhD,EAAasD,mBAE9B,IAAMC,EAAmB3C,OAAOiC,aAAaW,IAAIR,EAAGtB,aAC/C6B,EAGH3C,OAAOiC,aAAaY,IAAIT,EAAGtB,aAAa,oBAAI6B,GAAkB,GAAF,CAAEF,IAAQ,IAFtEzC,OAAOiC,aAAaY,IAAIT,EAAGtB,YAAa,CAAC2B,GAI7C,I,0FAEA,SAAK3B,EAAqBX,GACxB,IAAMiC,EAAK,IAAIC,EAAY,SAAU,MAAOf,KAAKC,WAAYT,GAC7D,IAAII,EAASkB,EAAIhD,EAAa0D,SAAU3C,GAExC,IAAM4C,EAA0C/C,OAAOiC,aAAaW,IAAI9B,GACnEiC,GAA4C,IAA1BA,EAAe3C,OACjC2C,EAAeC,SAAQ,SAAAC,GAAY,OAAAA,EAAS9C,EAAT,IADYiB,EAAO8B,QAAQ,iCAA0BpC,GAE/F,IACF,EAtCA,CAA2BqC,G,iBCf3B,aAUE,a,IAAY,sDACV,GAVF,0C,yDACA,mC,yDACA,iC,yDACA,qC,yDACA,mC,yDAMsB,IAAhBxB,EAAKvB,QAAgBuB,EAAK,GAAGC,MAAMF,GAAoB,CACnD,MAAkCC,EAAK,GAAGE,MAAM,KAAxCb,GAAN,KAAI,KAAM,MAAEC,EAAE,KAAEF,EAAM,KAAE5B,EAAI,KACpCmC,KAAKR,YAAca,EAAK,GACxBL,KAAKN,KAAOA,EACZM,KAAKL,GAAKA,EACVK,KAAKP,OAASA,EACdO,KAAKnC,KAAOA,C,KACP,IAAoB,IAAhBwC,EAAKvB,OAOd,MAAM,IAAI0B,MAAM,2DAA6DC,KAAKC,UAAUL,IAN5FL,KAAKN,KAAOW,EAAK,GACjBL,KAAKL,GAAKU,EAAK,GACfL,KAAKP,OAASY,EAAK,GACnBL,KAAKnC,KAAOwC,EAAK,GACjBL,KAAKR,YAAc,eAAQQ,KAAKN,KAAI,YAAIM,KAAKL,GAAE,YAAIK,KAAKP,OAAM,YAAIO,KAAKnC,K,CAI3E,CACF,SA5BA,GCEA,aAKE,WAAY2B,EAA4BK,EAAuBhB,GAJ/D,0C,yDACA,mC,yDACA,mC,yDAGEmB,KAAKR,YAAcA,EACnBQ,KAAKH,KAAOA,EACZG,KAAKnB,KAAOA,EAEZiB,EAAOgC,SAAS9B,KAClB,CACF,SAZA,GCOA,2B,8CAsBA,QAtB4B,a,8FAM1B,SAAS+B,EAAsBC,GAC7B,IAAMlB,EAAK,IAAImB,EAAc,SAAU,MAAOjC,KAAKC,WAAY8B,GAC/D,IAAIG,EAAYpB,EAAI/C,EAAgBqD,mBAEpC,aAAaW,EAAcC,EAC7B,I,gGAEA,SAAiBnB,G,IAAmB,wD,qFAIlC,OAHMC,EAAK,IAAImB,EAAc,MAAO,SAAUjC,KAAKC,WAAYY,GAC/D,IAAIqB,EAAYpB,EAAI/C,EAAgBoE,YAAatD,GAE1C,CAAP,EAAO,0BAAG,SAAYgC,GAAchC,GAAI,IAAEuD,MAAK,W,IAAC,sDAE9C,OADA,IAAIF,EAAYpB,EAAI/C,EAAgByD,SAAU3C,GACvCA,CACT,I,UAEJ,EAtBA,CAA4BgD,GCNfQ,EAAc,CACzBC,QAAA,SAAQC,EAAUC,GAChB,IAAIC,EAGFA,GADI,OAAFxB,SAAE,IAAFA,QAAE,EAAFA,GAAIyB,QACG,OAEA,KAEXH,EAAII,OAAOC,iBAAiBC,QAAUJ,EAEvB,OAAXA,IACFF,EAAII,OAAOC,iBAAiBE,YAAcN,EAAQvC,WAClDsC,EAAII,OAAOC,iBAAiBG,eAAiBP,EAAQtC,cACrDqC,EAAII,OAAOC,iBAAiBI,OAAS,IAAIC,EAAMT,EAAQvC,WAAYuC,EAAQtC,eAC3EqC,EAAII,OAAOC,iBAAiBM,QAAU,IAAIC,EAAOX,EAAQvC,WAAYuC,EAAQtC,eAE7ExB,OAAOuE,MAAQV,EAAII,OAAOC,iBAAiBI,QAI7CtE,OAAOoB,OAASA,EAChBA,EAAO8B,QAAQ,UAAGY,EAAQvC,WAAU,aAAKuC,EAAQtC,cAAa,uBAAeuC,EAAM,gBACrF,GCnBIxC,EAAa,mBACbC,EAAgB,SAEtB,QAAU,GAAKkD,IAAIf,EAAa,CAACpC,WAAU,EAAEC,cAAa,IAAGkD,IAAIC,GAAOD,IAAI,GAAQE,MAAM,O,GCXtFC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAInE,EAAS8D,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAC,EAAoBJ,GAAUK,KAAKrE,EAAOmE,QAASnE,EAAQA,EAAOmE,QAASJ,GAGpE/D,EAAOmE,OACf,CAGAJ,EAAoBO,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,SAASC,EAAQC,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAASlF,OAAQ0F,IAAK,CACrCL,EAAWH,EAASQ,GAAG,GACvBJ,EAAKJ,EAASQ,GAAG,GACjBH,EAAWL,EAASQ,GAAG,GAE3B,IAJA,IAGIC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAASrF,OAAQ4F,MACpB,EAAXL,GAAsBC,GAAgBD,IAAaM,OAAOC,KAAKpB,EAAoBS,GAAGY,OAAM,SAASC,GAAO,OAAOtB,EAAoBS,EAAEa,GAAKX,EAASO,GAAK,IAChKP,EAASY,OAAOL,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASe,OAAOP,IAAK,GACrB,IAAIQ,EAAIZ,SACET,IAANqB,IAAiBd,EAASc,EAC/B,CACD,CACA,OAAOd,CArBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAASlF,OAAQ0F,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAwB/B,C,eC5BAb,EAAoByB,EAAI,SAASxF,GAChC,IAAIyF,EAASzF,GAAUA,EAAO0F,WAC7B,WAAa,OAAO1F,EAAO,UAAY,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADA+D,EAAoB4B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,C,eCNA1B,EAAoB4B,EAAI,SAASxB,EAAS0B,GACzC,IAAI,IAAIR,KAAOQ,EACX9B,EAAoB+B,EAAED,EAAYR,KAAStB,EAAoB+B,EAAE3B,EAASkB,IAC5EH,OAAOa,eAAe5B,EAASkB,EAAK,CAAEW,YAAY,EAAMnE,IAAKgE,EAAWR,IAG3E,C,eCPAtB,EAAoBkC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO3F,MAAQ,IAAI4F,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,kBAAXnH,OAAqB,OAAOA,MACxC,CACA,CAPuB,E,eCAxB8E,EAAoB+B,EAAI,SAASO,EAAKC,GAAQ,OAAOpB,OAAOqB,UAAUC,eAAenC,KAAKgC,EAAKC,EAAO,C,eCKtG,IAAIG,EAAkB,CACrB,IAAK,EACL,GAAI,GAaL1C,EAAoBS,EAAES,EAAI,SAASyB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4BxH,GAC/D,IAKI4E,EAAU0C,EALVhC,EAAWtF,EAAK,GAChByH,EAAczH,EAAK,GACnB0H,EAAU1H,EAAK,GAGI2F,EAAI,EAC3B,GAAGL,EAASqC,MAAK,SAASC,GAAM,OAA+B,IAAxBP,EAAgBO,EAAW,IAAI,CACrE,IAAIhD,KAAY6C,EACZ9C,EAAoB+B,EAAEe,EAAa7C,KACrCD,EAAoBO,EAAEN,GAAY6C,EAAY7C,IAGhD,GAAG8C,EAAS,IAAIrC,EAASqC,EAAQ/C,EAClC,CAEA,IADG6C,GAA4BA,EAA2BxH,GACrD2F,EAAIL,EAASrF,OAAQ0F,IACzB2B,EAAUhC,EAASK,GAChBhB,EAAoB+B,EAAEW,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAO3C,EAAoBS,EAAEC,EAC9B,EAEIwC,EAAqBC,KAAK,8BAAgCA,KAAK,+BAAiC,GACpGD,EAAmBhF,QAAQ0E,EAAqBQ,KAAK,KAAM,IAC3DF,EAAmBG,KAAOT,EAAqBQ,KAAK,KAAMF,EAAmBG,KAAKD,KAAKF,G,IChDvF,IAAII,EAAsBtD,EAAoBS,OAAEN,EAAW,CAAC,IAAI,KAAK,WAAa,OAAOH,EAAoB,IAAM,IACnHsD,EAAsBtD,EAAoBS,EAAE6C,E","sources":["webpack://settings-panel/./src/modules/settings-panel/SettingsPanel.vue","webpack://settings-panel/./src/modules/settings-panel/SettingsPanel.vue?1896","webpack://settings-panel/./src/modules/settings-panel/views/RootSettingsView.vue?4770","webpack://settings-panel/./src/modules/settings-panel/views/RootSettingsView.vue?26aa","webpack://settings-panel/./src/modules/settings-panel/views/RootSettingsView.vue","webpack://settings-panel/./src/connect/events/altEventType.ts","webpack://settings-panel/./src/modules/settings-panel/router/index.ts","webpack://settings-panel/./src/modules/settings-panel/store/index.ts","webpack://settings-panel/./src/connect/logs/altLogger.ts","webpack://settings-panel/./src/connect/events/altEvent.ts","webpack://settings-panel/./src/connect/ModuleDependent.ts","webpack://settings-panel/./src/connect/events/utils/regExps.ts","webpack://settings-panel/./src/connect/events/eventString.ts","webpack://settings-panel/./src/connect/events/altMP.ts","webpack://settings-panel/./src/connect/events/rpc/rpcEventSting.ts","webpack://settings-panel/./src/connect/events/rpc/altRPCEvent.ts","webpack://settings-panel/./src/connect/events/rpc/altRPC.ts","webpack://settings-panel/./src/connect/connectRageVuePlugin.ts","webpack://settings-panel/./src/modules/settings-panel/main.ts","webpack://settings-panel/webpack/bootstrap","webpack://settings-panel/webpack/runtime/chunk loaded","webpack://settings-panel/webpack/runtime/compat get default export","webpack://settings-panel/webpack/runtime/define property getters","webpack://settings-panel/webpack/runtime/global","webpack://settings-panel/webpack/runtime/hasOwnProperty shorthand","webpack://settings-panel/webpack/runtime/jsonp chunk loading","webpack://settings-panel/webpack/startup"],"sourcesContent":["<template>\r\n  <main class=\"d-flex\">\r\n    SettingsPanel\r\n    <router-view/>\r\n  </main>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n\r\n</style>\r\n","import { render } from \"./SettingsPanel.vue?vue&type=template&id=64d0e65a\"\nconst script = {}\n\nimport exportComponent from \"C:\\\\Projects\\\\alternativa\\\\client_packages_dev\\\\web_packages\\\\alternativa-cef\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"home\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1))\n}","\r\nimport {defineComponent} from 'vue';\r\n\r\nexport default defineComponent({\r\n  name: 'HomeView',\r\n\r\n});\r\n","import { render } from \"./RootSettingsView.vue?vue&type=template&id=597642b0&ts=true\"\nimport script from \"./RootSettingsView.vue?vue&type=script&lang=ts\"\nexport * from \"./RootSettingsView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Projects\\\\alternativa\\\\client_packages_dev\\\\web_packages\\\\alternativa-cef\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {AltEvent} from \"@/connect/events/altEvent\";\r\n\r\nexport enum AltEventType {\r\n  RECEIVED,\r\n  SEND,\r\n  // Зарегистрирован слушатель обычных событий\r\n  REGISTER_LISTENER,\r\n  UNREGISTER_LISTENER,\r\n}\r\n\r\nexport type AltEventCallback = (data: object) => void\r\n\r\nexport enum AltRPCEventType {\r\n  RECEIVED,\r\n  // Вызвана сервкерная процедура\r\n  CALL_SERVER,\r\n  // Зарегистрирован слушатель обычных событий\r\n  REGISTER_LISTENER,\r\n  UNREGISTER_LISTENER,\r\n}\r\n","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router'\r\nimport HomeView from '../views/RootSettingsView.vue'\r\n\r\nconst routes: Array<RouteRecordRaw> = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: HomeView\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(),\r\n  routes\r\n})\r\n\r\nexport default router\r\n","import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n  },\r\n  getters: {\r\n  },\r\n  mutations: {\r\n  },\r\n  actions: {\r\n  },\r\n  modules: {\r\n  }\r\n})\r\n","import {AltEvent} from \"@/connect/events/altEvent\";\r\nimport {AltEventType, AltRPCEventType} from \"@/connect/events/altEventType\";\r\nimport {AltRPCEvent} from \"@/connect/events/rpc/altRPCEvent\";\r\n\r\nexport class altLog {\r\n  static set logLevel(logLevel: string) {\r\n    // @ts-ignore\r\n    window.altLogLevelGlobal = logLevel\r\n  }\r\n\r\n  static get logLevel(): string {\r\n    // @ts-ignore\r\n    return window.altLogLevelGlobal || process.env.VUE_APP_ALT_LOG_LEVEL || process.env.NODE_ENV === \"development\" ? \"info\" : \"warning\"\r\n  }\r\n\r\n  /**\r\n   * @method data\r\n   *\r\n   * Универсавльный логгер для данных\r\n   *\r\n   * @param {any} data Данные\r\n   *\r\n   * [groupName, ...data]\r\n   * [groupName, ...data, plainData: boolean]\r\n   * */\r\n  public static log(...data: any[]) {\r\n    // Обработчик для plainData\r\n    if (typeof data[data.length - 1] === \"boolean\" && data[data.length - 1]) {\r\n      console.log(...data)\r\n      return\r\n    }\r\n\r\n    if (typeof data[0] === \"string\" && data.length > 1) {\r\n      console.group(data[0])\r\n      console.log(...data.slice(1))\r\n      console.groupEnd()\r\n    } else {\r\n      console.log(...data)\r\n    }\r\n  }\r\n\r\n  public static warning(...data: any) {\r\n    console.warn(...data)\r\n  }\r\n\r\n  public static error(...data: any) {\r\n    console.error(...data)\r\n  }\r\n\r\n  static universalEvent<T>(event: AltEvent | AltRPCEvent) {\r\n    console.groupCollapsed(\"Event string:\", event.eventString.eventString)\r\n    console.log(\"Module:\", event.eventString.module)\r\n    console.log(\"Name:\", event.eventString.name)\r\n    console.log(\"From:\", event.eventString.from)\r\n    console.log(\"To:\", event.eventString.to)\r\n    if (event instanceof AltEvent) {\r\n      console.log(\"Type:\", AltEventType[event.type])\r\n    } else {\r\n      console.log(\"Type:\", AltRPCEventType[event.type])\r\n    }\r\n    console.groupEnd()\r\n\r\n    console.log(event.data)\r\n    console.groupEnd()\r\n  }\r\n\r\n  static event(event: AltEvent) {\r\n    if (altLog.logLevel === \"event\" || altLog.logLevel === \"info\") {\r\n      console.groupCollapsed(`[EV ${AltEventType[event.type]}] ${event.eventString.module}:${event.eventString.name}`)\r\n\r\n      altLog.universalEvent<AltEvent>(event)\r\n    }\r\n  }\r\n\r\n  static rpcEvent(event: AltRPCEvent) {\r\n    if (altLog.logLevel === \"event\" || altLog.logLevel === \"info\") {\r\n      console.groupCollapsed(`[RPC ${AltRPCEventType[event.type]}] ${event.eventString.module}:${event.eventString.name}`)\r\n\r\n      altLog.universalEvent<AltRPCEvent>(event)\r\n    }\r\n  }\r\n}\r\n","import {AltEventType} from \"@/connect/events/altEventType\";\r\nimport {altLog} from \"@/connect/logs/altLogger\";\r\nimport {EventString} from \"@/connect/events/eventString\";\r\n\r\nexport class AltEvent {\r\n  eventString: EventString\r\n  type: AltEventType\r\n  data?: object\r\n\r\n\r\n  constructor(eventString: EventString, type: AltEventType, data?: object) {\r\n    this.eventString = eventString\r\n    this.type = type\r\n    this.data = data\r\n\r\n    altLog.event(this)\r\n  }\r\n}\r\n","export abstract class ModuleDependent {\r\n  moduleName: string\r\n  moduleVersion: string\r\n\r\n  public constructor(moduleName: string, moduleVersion: string) {\r\n    this.moduleName = moduleName\r\n    this.moduleVersion = moduleVersion\r\n  }\r\n}\r\n","export const altDefaultEventRegexp = /[A-Z]{3,6}:[A-Z]{3,6}:[A-z]*:[A-z]*/\r\nexport const altRPCEventRegexp = /RPC::[A-Z]{3,6}:[A-Z]{3,6}:[A-z]*:[A-z]*/\r\n","import {altDefaultEventRegexp, altRPCEventRegexp} from \"@/connect/events/utils/regExps\";\r\n\r\nexport class EventString {\r\n  eventString: string\r\n  from: string\r\n  to: string\r\n  module: string\r\n  name: string\r\n\r\n  constructor(...args: [string] | [string, string] | [string, string, string, string]) {\r\n    if (args.length === 1 && args[0].match(altDefaultEventRegexp)) {\r\n      this.eventString = args[0]\r\n      this.from = this.eventString.split(\":\")[0]\r\n      this.to = this.eventString.split(\":\")[1]\r\n      this.module = this.eventString.split(\":\")[2]\r\n      this.name = this.eventString.split(\":\")[3]\r\n    } else if (args.length === 4) {\r\n      this.from = args[0]\r\n      this.to = args[1]\r\n      this.module = args[2]\r\n      this.name = args[3]\r\n      this.eventString = `${this.from}:${this.to}:${this.module}:${this.name}`\r\n    } else if (args.length === 2) {\r\n      this.from = \"CEF\"\r\n      this.to = \"CLIENT\"\r\n      this.module = args[0]\r\n      this.name = args[1]\r\n      this.eventString = `${this.from}:${this.to}:${this.module}:${this.name}`\r\n    } else {\r\n      throw new Error(\"Invalid arguments passed to EventString constructor: \" + JSON.stringify(args))\r\n    }\r\n  }\r\n}\r\n","// @ts-nocheck\r\n// Проверка отключена из-за использования window.и mp в коде плагина\r\n\r\nimport {AltEvent} from \"@/connect/events/altEvent\";\r\nimport {ModuleDependent} from \"@/connect/ModuleDependent\";\r\nimport {AltEventCallback, AltEventType} from \"@/connect/events/altEventType\";\r\nimport {altLog} from \"@/connect/logs/altLogger\";\r\nimport {EventString} from \"@/connect/events/eventString\";\r\n\r\nwindow.altListeners = new Map<string, Array<AltEventCallback>>();\r\n\r\n\r\n/**\r\n * @class altMP\r\n *\r\n * Класс для взаимодействия с клиентом посредством событий\r\n * */\r\nexport class altMP extends ModuleDependent {\r\n  /**\r\n   * @method trigger\r\n   *\r\n   * Отправляет событие клиенту\r\n   * */\r\n  trigger(eventName: string, data: object) {\r\n    const es = new EventString(\"CEF\", \"CLIENT\", this.moduleName, eventName)\r\n    new AltEvent(es, AltEventType.SEND, data)\r\n\r\n    mp.trigger(eventString, ...data)\r\n  }\r\n\r\n  /**\r\n   * @method on\r\n   *\r\n   * Добавляет обработчик события\r\n   * */\r\n  on(eventName: string, callback: (...data: any) => void) {\r\n    const es = new EventString(\"CLIENT\", \"CEF\", this.moduleName, eventName)\r\n    new AltEvent(es, AltEventType.REGISTER_LISTENER)\r\n\r\n    const currentListeners = window.altListeners.get(es.eventString)\r\n    if (!currentListeners) {\r\n      window.altListeners.set(es.eventString, [callback])\r\n    } else {\r\n      window.altListeners.set(es.eventString, [...currentListeners, callback])\r\n    }\r\n  }\r\n\r\n  call(eventString: string, data: object) {\r\n    const es = new EventString(\"CLIENT\", \"CEF\", this.moduleName, eventString)\r\n    new AltEvent(es, AltEventType.RECEIVED, data)\r\n\r\n    const eventListeners: Array<AltEventCallback> = window.altListeners.get(eventString)\r\n    if (!eventListeners || eventListeners.length === 0) altLog.warning(`No listeners for event ${eventString}`)\r\n    else eventListeners.forEach(listener => listener(data))\r\n  }\r\n}\r\n","import {altRPCEventRegexp} from \"@/connect/events/utils/regExps\";\r\n\r\nexport class RPCEventSting {\r\n  eventString: string\r\n  from: string\r\n  to: string\r\n  module: string\r\n  name: string\r\n\r\n  /**\r\n   * @param\r\n   * */\r\n  constructor(...args: [string] | [string, string, string, string]) {\r\n    if (args.length === 1 && args[0].match(altRPCEventRegexp)) {\r\n      const [_, __, from, to, module, name] = args[0].split(\":\")\r\n      this.eventString = args[0]\r\n      this.from = from\r\n      this.to = to\r\n      this.module = module\r\n      this.name = name\r\n    } else if (args.length === 4) {\r\n      this.from = args[0]\r\n      this.to = args[1]\r\n      this.module = args[2]\r\n      this.name = args[3]\r\n      this.eventString = `RPC::${this.from}:${this.to}:${this.module}:${this.name}`\r\n    } else {\r\n      throw new Error(\"Invalid arguments passed to RPCEventString constructor: \" + JSON.stringify(args))\r\n    }\r\n  }\r\n}\r\n","import {AltRPCEventType} from \"@/connect/events/altEventType\";\r\nimport {altLog} from \"@/connect/logs/altLogger\";\r\nimport {RPCEventSting} from \"@/connect/events/rpc/rpcEventSting\";\r\n\r\nexport class AltRPCEvent {\r\n  eventString: RPCEventSting\r\n  type: AltRPCEventType\r\n  data?: object\r\n\r\n  constructor(eventString: RPCEventSting, type: AltRPCEventType, data?: object) {\r\n    this.eventString = eventString\r\n    this.type = type\r\n    this.data = data\r\n\r\n    altLog.rpcEvent(this)\r\n  }\r\n}\r\n","import rpc from \"rage-rpc\"\r\nimport {AltRPCEventType} from \"@/connect/events/altEventType\";\r\nimport {ModuleDependent} from \"@/connect/ModuleDependent\";\r\nimport {RPCEventSting} from \"@/connect/events/rpc/rpcEventSting\";\r\nimport {AltRPCEvent} from \"@/connect/events/rpc/altRPCEvent\";\r\n\r\n/**\r\n * @class altRPC\r\n *\r\n * Класс для взаимодействия с клиентом/сервером по RPC (RemoteCallProcedure)\r\n * */\r\nexport class altRPC extends ModuleDependent {\r\n  /**\r\n   * @method register\r\n   *\r\n   * Регистрация слушателя процедуры\r\n   * */\r\n  register(listenerName: string, cb: (...data: any) => void) {\r\n    const es = new RPCEventSting(\"SERVER\", \"CEF\", this.moduleName, listenerName)\r\n    new AltRPCEvent(es, AltRPCEventType.REGISTER_LISTENER)\r\n\r\n    rpc.register(listenerName, cb)\r\n  }\r\n\r\n  async callServer(eventName: string, ...data: any) {\r\n    const es = new RPCEventSting(\"CEF\", \"SERVER\", this.moduleName, eventName)\r\n    new AltRPCEvent(es, AltRPCEventType.CALL_SERVER, data)\r\n\r\n    return rpc.callServer(eventName, ...data).then((...data) => {\r\n      new AltRPCEvent(es, AltRPCEventType.RECEIVED, data)\r\n      return data\r\n    })\r\n  }\r\n}\r\n","import {altMP} from \"@/connect/events/altMP\";\r\nimport {App} from \"vue\";\r\nimport {altLog} from \"@/connect/logs/altLogger\";\r\nimport {altRPC} from \"@/connect/events/rpc/altRPC\";\r\n\r\nexport const connectRage = {\r\n  install(app: App, options: {moduleName: string, moduleVersion: string}) {\r\n    let altEnv: string;\r\n    // @ts-ignore\r\n    if (mp?.isFake) {\r\n      altEnv = \"node\"\r\n    } else {\r\n      altEnv = \"mp\"\r\n    }\r\n    app.config.globalProperties.$altEnv = altEnv\r\n\r\n    if (altEnv === \"mp\") {\r\n      app.config.globalProperties.$moduleName = options.moduleName\r\n      app.config.globalProperties.$moduleVersion = options.moduleVersion\r\n      app.config.globalProperties.$altMp = new altMP(options.moduleName, options.moduleVersion)\r\n      app.config.globalProperties.$altRPC = new altRPC(options.moduleName, options.moduleVersion)\r\n      // @ts-ignore\r\n      window.altMP = app.config.globalProperties.$altMp\r\n    }\r\n\r\n    // @ts-ignore\r\n    window.altLog = altLog\r\n    altLog.warning(`${options.moduleName} [${options.moduleVersion}] loaded in ${altEnv} environment`)\r\n  }\r\n}\r\n","import {createApp} from 'vue'\r\nimport App from './SettingsPanel.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport \"@/assets/style/bootstrap-utilities.min.css\"\r\nimport \"@/assets/style/bootstrap-reboot.min.css\"\r\nimport {connectRage} from \"@/connect/connectRageVuePlugin\";\r\n\r\n\r\nconst moduleName = \"AltSettingsPanel\"\r\nconst moduleVersion = \"0.0.1\"\r\n\r\ncreateApp(App).use(connectRage, {moduleName, moduleVersion}).use(store).use(router).mount('#app')\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t488: 0,\n\t64: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksettings_panel\"] = self[\"webpackChunksettings_panel\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998,64], function() { return __webpack_require__(942); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","script","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","name","AltEventType","AltRPCEventType","routes","path","component","router","history","state","getters","mutations","actions","modules","window","altLogLevelGlobal","logLevel","data","length","console","log","group","slice","groupEnd","warn","error","event","groupCollapsed","eventString","module","from","to","AltEvent","type","altLog","universalEvent","this","moduleName","moduleVersion","altDefaultEventRegexp","altRPCEventRegexp","args","match","split","Error","JSON","stringify","altListeners","Map","eventName","es","EventString","SEND","mp","trigger","callback","REGISTER_LISTENER","currentListeners","get","set","RECEIVED","eventListeners","forEach","listener","warning","ModuleDependent","rpcEvent","listenerName","cb","RPCEventSting","AltRPCEvent","CALL_SERVER","then","connectRage","install","app","options","altEnv","isFake","config","globalProperties","$altEnv","$moduleName","$moduleVersion","$altMp","altMP","$altRPC","altRPC","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}